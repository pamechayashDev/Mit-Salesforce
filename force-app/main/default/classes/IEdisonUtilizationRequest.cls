/*
 * IEdison API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * IEdisonUtilizationRequest
 */
public class IEdisonUtilizationRequest {
    /**
     * Get inventionReportNumber
     * @return inventionReportNumber
     */
    public String inventionReportNumber { get; set; }

    /**
     * Get reportingYear
     * @return reportingYear
     */
    public Integer reportingYear { get; set; }

    /**
     * Get latestStageDev
     * @return latestStageDev
     */
    public String latestStageDev { get; set; }

    /**
     * Get firstCommercialSaleYear
     * @return firstCommercialSaleYear
     */
    public Integer firstCommercialSaleYear { get; set; }

    /**
     * Get totalIncome
     * @return totalIncome
     */
    public Double totalIncome { get; set; }

    /**
     * Get licensees
     * @return licensees
     */
    public List<IEdisonLicensees> licensees { get; set; }

    /**
     * Get exclusiveLicensesOptions
     * @return exclusiveLicensesOptions
     */
    public Integer exclusiveLicensesOptions { get; set; }

    /**
     * Get nonExclusiveLicensesOptions
     * @return nonExclusiveLicensesOptions
     */
    public Integer nonExclusiveLicensesOptions { get; set; }

    /**
     * Get smallBusinessLicensesOptions
     * @return smallBusinessLicensesOptions
     */
    public Integer smallBusinessLicensesOptions { get; set; }

    /**
     * Get isUSManufacturingRequired1
     * @return isUSManufacturingRequired1
     */
    public String isUSManufacturingRequired1 { get; set; }

    /**
     * Get isUSManufacturingRequired2
     * @return isUSManufacturingRequired2
     */
    public String isUSManufacturingRequired2 { get; set; }

    /**
     * Get isUSManufacturingRequired3
     * @return isUSManufacturingRequired3
     */
    public String isUSManufacturingRequired3 { get; set; }

    /**
     * Get notes
     * @return notes
     */
    public String notes { get; set; }

    /**
     * Get commercializationPlanId
     * @return commercializationPlanId
     */
    public Integer commercializationPlanId { get; set; }

    /**
     * Get newUsJobs
     * @return newUsJobs
     */
    public Integer newUsJobs { get; set; }

    /**
     * Get newUsCompanies
     * @return newUsCompanies
     */
    public Integer newUsCompanies { get; set; }

    /**
     * Get manufacturingCommProds
     * @return manufacturingCommProds
     */
    public List<IEdisonManufacturingCommProds> manufacturingCommProds { get; set; }

    /**
     * Get commercialProds
     * @return commercialProds
     */
    public List<IEdisonCommercialProds> commercialProds { get; set; }

    public IEdisonUtilizationRequest() {
        licensees = new List<IEdisonLicensees>();
        manufacturingCommProds = new List<IEdisonManufacturingCommProds>();
        commercialProds = new List<IEdisonCommercialProds>();
    }

    public static IEdisonUtilizationRequest getExample() {
        IEdisonUtilizationRequest utilizationRequest = new IEdisonUtilizationRequest();
          utilizationRequest.inventionReportNumber = '';
          utilizationRequest.reportingYear = 0;
          utilizationRequest.latestStageDev = '';
          utilizationRequest.firstCommercialSaleYear = 0;
          utilizationRequest.totalIncome = 1.3579;
          utilizationRequest.licensees = new List<IEdisonLicensees>{IEdisonLicensees.getExample()};
          utilizationRequest.exclusiveLicensesOptions = 0;
          utilizationRequest.nonExclusiveLicensesOptions = 0;
          utilizationRequest.smallBusinessLicensesOptions = 0;
          utilizationRequest.isUSManufacturingRequired1 = '';
          utilizationRequest.isUSManufacturingRequired2 = '';
          utilizationRequest.isUSManufacturingRequired3 = '';
          utilizationRequest.notes = '';
          utilizationRequest.commercializationPlanId = 0;
          utilizationRequest.newUsJobs = 0;
          utilizationRequest.newUsCompanies = 0;
          utilizationRequest.manufacturingCommProds = new List<IEdisonManufacturingCommProds>{IEdisonManufacturingCommProds.getExample()};
          utilizationRequest.commercialProds = new List<IEdisonCommercialProds>{IEdisonCommercialProds.getExample()};
        return utilizationRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof IEdisonUtilizationRequest) {           
            IEdisonUtilizationRequest utilizationRequest = (IEdisonUtilizationRequest) obj;
            return this.inventionReportNumber == utilizationRequest.inventionReportNumber
                && this.reportingYear == utilizationRequest.reportingYear
                && this.latestStageDev == utilizationRequest.latestStageDev
                && this.firstCommercialSaleYear == utilizationRequest.firstCommercialSaleYear
                && this.totalIncome == utilizationRequest.totalIncome
                && this.licensees == utilizationRequest.licensees
                && this.exclusiveLicensesOptions == utilizationRequest.exclusiveLicensesOptions
                && this.nonExclusiveLicensesOptions == utilizationRequest.nonExclusiveLicensesOptions
                && this.smallBusinessLicensesOptions == utilizationRequest.smallBusinessLicensesOptions
                && this.isUSManufacturingRequired1 == utilizationRequest.isUSManufacturingRequired1
                && this.isUSManufacturingRequired2 == utilizationRequest.isUSManufacturingRequired2
                && this.isUSManufacturingRequired3 == utilizationRequest.isUSManufacturingRequired3
                && this.notes == utilizationRequest.notes
                && this.commercializationPlanId == utilizationRequest.commercializationPlanId
                && this.newUsJobs == utilizationRequest.newUsJobs
                && this.newUsCompanies == utilizationRequest.newUsCompanies
                && this.manufacturingCommProds == utilizationRequest.manufacturingCommProds
                && this.commercialProds == utilizationRequest.commercialProds;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (inventionReportNumber == null ? 0 : System.hashCode(inventionReportNumber));
        hashCode = (17 * hashCode) + (reportingYear == null ? 0 : System.hashCode(reportingYear));
        hashCode = (17 * hashCode) + (latestStageDev == null ? 0 : System.hashCode(latestStageDev));
        hashCode = (17 * hashCode) + (firstCommercialSaleYear == null ? 0 : System.hashCode(firstCommercialSaleYear));
        hashCode = (17 * hashCode) + (totalIncome == null ? 0 : System.hashCode(totalIncome));
        hashCode = (17 * hashCode) + (licensees == null ? 0 : System.hashCode(licensees));
        hashCode = (17 * hashCode) + (exclusiveLicensesOptions == null ? 0 : System.hashCode(exclusiveLicensesOptions));
        hashCode = (17 * hashCode) + (nonExclusiveLicensesOptions == null ? 0 : System.hashCode(nonExclusiveLicensesOptions));
        hashCode = (17 * hashCode) + (smallBusinessLicensesOptions == null ? 0 : System.hashCode(smallBusinessLicensesOptions));
        hashCode = (17 * hashCode) + (isUSManufacturingRequired1 == null ? 0 : System.hashCode(isUSManufacturingRequired1));
        hashCode = (17 * hashCode) + (isUSManufacturingRequired2 == null ? 0 : System.hashCode(isUSManufacturingRequired2));
        hashCode = (17 * hashCode) + (isUSManufacturingRequired3 == null ? 0 : System.hashCode(isUSManufacturingRequired3));
        hashCode = (17 * hashCode) + (notes == null ? 0 : System.hashCode(notes));
        hashCode = (17 * hashCode) + (commercializationPlanId == null ? 0 : System.hashCode(commercializationPlanId));
        hashCode = (17 * hashCode) + (newUsJobs == null ? 0 : System.hashCode(newUsJobs));
        hashCode = (17 * hashCode) + (newUsCompanies == null ? 0 : System.hashCode(newUsCompanies));
        hashCode = (17 * hashCode) + (manufacturingCommProds == null ? 0 : System.hashCode(manufacturingCommProds));
        hashCode = (17 * hashCode) + (commercialProds == null ? 0 : System.hashCode(commercialProds));
        return hashCode;
    }
}