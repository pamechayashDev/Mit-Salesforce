/*
 * IEdison API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class IEdisonUtilizationApi {
    IEdisonClient client;

    public IEdisonUtilizationApi(IEdisonClient client) {
        this.client = client;
    }

    public IEdisonUtilizationApi() {
        this.client = new IEdisonClient();
    }

    public IEdisonClient getClient() {
        return this.client;
    }

    /**
     * 
     * Create a new utilization report.
     * @param iedisonUtilizationRequest Utilization request. (optional)
     * @return IEdisonUtilizationResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public IEdisonUtilizationResponse utilizationsCreatePost(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (IEdisonUtilizationResponse) client.invoke(
            'POST', '/utilizations/create',
            (IEdisonUtilizationRequest) params.get('iedisonUtilizationRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth2', 'OAuth2', 'OAuth2' },
            IEdisonUtilizationResponse.class
        );
    }
    /**
     * 
     * Search for utilization reports.
     * @param iedisonUtilizationSearchRequest Utilization search request. (optional)
     * @return IEdisonUtilizationSearchResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public IEdisonUtilizationSearchResponse utilizationsSearchPost(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (IEdisonUtilizationSearchResponse) client.invoke(
            'POST', '/utilizations/search',
            (IEdisonUtilizationSearchRequest) params.get('iedisonUtilizationSearchRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth2', 'OAuth2', 'OAuth2' },
            IEdisonUtilizationSearchResponse.class
        );
    }
    /**
     * 
     * Update an utilization report.
     * @param iedisonUtilizationRequest Utilization request. (optional)
     * @return IEdisonUtilizationResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public IEdisonUtilizationResponse utilizationsUpdatePost(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (IEdisonUtilizationResponse) client.invoke(
            'POST', '/utilizations/update',
            (IEdisonUtilizationRequest) params.get('iedisonUtilizationRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'OAuth2', 'OAuth2', 'OAuth2' },
            IEdisonUtilizationResponse.class
        );
    }
}