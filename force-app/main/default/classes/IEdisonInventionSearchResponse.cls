/*
 * IEdison API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * IEdisonInventionSearchResponse
 */
public class IEdisonInventionSearchResponse implements OAS.MappedProperties {
    /**
     * Get totalRecords
     * @return totalRecords
     */
    public Integer totalRecords { get; set; }

    /**
     * Get r_limit
     * @return r_limit
     */
    public Integer r_limit { get; set; }

    /**
     * Get offset
     * @return offset
     */
    public Integer offset { get; set; }

    /**
     * Get inventions
     * @return inventions
     */
    public List<IEdisonInventionResponse> inventions { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'limit' => 'r_limit'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public IEdisonInventionSearchResponse() {
        inventions = new List<IEdisonInventionResponse>();
    }

    public static IEdisonInventionSearchResponse getExample() {
        IEdisonInventionSearchResponse inventionSearchResponse = new IEdisonInventionSearchResponse();
          inventionSearchResponse.totalRecords = 0;
          inventionSearchResponse.r_limit = 0;
          inventionSearchResponse.offset = 0;
          inventionSearchResponse.inventions = new List<IEdisonInventionResponse>{IEdisonInventionResponse.getExample()};
        return inventionSearchResponse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof IEdisonInventionSearchResponse) {           
            IEdisonInventionSearchResponse inventionSearchResponse = (IEdisonInventionSearchResponse) obj;
            return this.totalRecords == inventionSearchResponse.totalRecords
                && this.r_limit == inventionSearchResponse.r_limit
                && this.offset == inventionSearchResponse.offset
                && this.inventions == inventionSearchResponse.inventions;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (totalRecords == null ? 0 : System.hashCode(totalRecords));
        hashCode = (17 * hashCode) + (r_limit == null ? 0 : System.hashCode(r_limit));
        hashCode = (17 * hashCode) + (offset == null ? 0 : System.hashCode(offset));
        hashCode = (17 * hashCode) + (inventions == null ? 0 : System.hashCode(inventions));
        return hashCode;
    }
}